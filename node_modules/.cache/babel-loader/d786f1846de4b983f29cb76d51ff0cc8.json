{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\src\\\\@fuse\\\\components\\\\FusePageLayouts\\\\simple\\\\FusePageSimpleSidebar.js\";\nimport React, { useImperativeHandle, useState } from 'react';\nimport { Hidden, Drawer } from '@material-ui/core';\nimport clsx from 'clsx';\nimport FusePageSimpleSidebarContent from './FusePageSimpleSidebarContent';\n\nfunction FusePageSimpleSidebar(props, ref) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var classes = props.classes;\n  useImperativeHandle(ref, function () {\n    return {\n      toggleSidebar: handleToggleDrawer\n    };\n  });\n\n  var handleToggleDrawer = function handleToggleDrawer() {\n    setIsOpen(!isOpen);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    lgUp: props.variant === 'permanent',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.position,\n    open: isOpen,\n    onClose: function onClose(ev) {\n      return handleToggleDrawer();\n    },\n    classes: {\n      root: clsx(classes.sidebarWrapper, props.variant),\n      paper: clsx(classes.sidebar, props.variant, props.position === 'left' ? classes.leftSidebar : classes.rightSidebar)\n    },\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    container: props.rootRef.current,\n    BackdropProps: {\n      classes: {\n        root: classes.backdrop\n      }\n    },\n    style: {\n      position: 'absolute'\n    },\n    onClick: function onClick(ev) {\n      return handleToggleDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(FusePageSimpleSidebarContent, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))), props.variant === 'permanent' && React.createElement(Hidden, {\n    mdDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.sidebarWrapper, props.variant),\n    open: isOpen,\n    classes: {\n      paper: clsx(classes.sidebar, props.variant, props.position === 'left' ? classes.leftSidebar : classes.rightSidebar)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FusePageSimpleSidebarContent, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))));\n}\n\nexport default React.forwardRef(FusePageSimpleSidebar);","map":{"version":3,"sources":["C:\\Users\\Roan\\Documents\\GitHub\\OnTimeReactFrontEnd\\src\\@fuse\\components\\FusePageLayouts\\simple\\FusePageSimpleSidebar.js"],"names":["React","useImperativeHandle","useState","Hidden","Drawer","clsx","FusePageSimpleSidebarContent","FusePageSimpleSidebar","props","ref","isOpen","setIsOpen","classes","toggleSidebar","handleToggleDrawer","variant","position","ev","root","sidebarWrapper","paper","sidebar","leftSidebar","rightSidebar","keepMounted","rootRef","current","backdrop","forwardRef"],"mappings":"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","sourcesContent":["import React, {useImperativeHandle, useState} from 'react';\r\nimport {Hidden, Drawer} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport FusePageSimpleSidebarContent from './FusePageSimpleSidebarContent';\r\n\r\nfunction FusePageSimpleSidebar(props, ref)\r\n{\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const classes = props.classes;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        toggleSidebar: handleToggleDrawer\r\n    }));\r\n\r\n    const handleToggleDrawer = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Hidden lgUp={props.variant === 'permanent'}>\r\n                <Drawer\r\n                    variant=\"temporary\"\r\n                    anchor={props.position}\r\n                    open={isOpen}\r\n                    onClose={(ev) => handleToggleDrawer()}\r\n                    classes={{\r\n                        root : clsx(classes.sidebarWrapper, props.variant),\r\n                        paper: clsx(classes.sidebar, props.variant, props.position === 'left' ? classes.leftSidebar : classes.rightSidebar)\r\n                    }}\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                    }}\r\n                    container={props.rootRef.current}\r\n                    BackdropProps={{\r\n                        classes: {\r\n                            root: classes.backdrop\r\n                        }\r\n                    }}\r\n                    style={{position: 'absolute'}}\r\n                    onClick={(ev) => handleToggleDrawer()}\r\n                >\r\n                    <FusePageSimpleSidebarContent {...props}/>\r\n                </Drawer>\r\n            </Hidden>\r\n            {props.variant === 'permanent' && (\r\n                <Hidden mdDown>\r\n                    <Drawer\r\n                        variant=\"permanent\"\r\n                        className={clsx(classes.sidebarWrapper, props.variant)}\r\n                        open={isOpen}\r\n                        classes={{\r\n                            paper: clsx(classes.sidebar, props.variant, props.position === 'left' ? classes.leftSidebar : classes.rightSidebar)\r\n                        }}\r\n                    >\r\n                        <FusePageSimpleSidebarContent {...props}/>\r\n                    </Drawer>\r\n                </Hidden>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default React.forwardRef(FusePageSimpleSidebar);\r\n"]},"metadata":{},"sourceType":"module"}