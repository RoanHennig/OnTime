{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\src\\\\@fuse\\\\components\\\\FuseAuthorization\\\\FuseAuthorization.js\";\nimport React, { Component } from 'react';\nimport { FuseUtils } from '@fuse';\nimport { matchRoutes } from 'react-router-config';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppContext from 'app/AppContext';\n\nvar FuseAuthorization =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FuseAuthorization, _Component);\n\n  function FuseAuthorization(props, context) {\n    var _this;\n\n    _classCallCheck(this, FuseAuthorization);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FuseAuthorization).call(this, props));\n    var routes = context.routes;\n    _this.state = {\n      accessGranted: true,\n      routes: routes\n    };\n    return _this;\n  }\n\n  _createClass(FuseAuthorization, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.accessGranted) {\n        this.redirectRoute();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.state.accessGranted) {\n        this.redirectRoute();\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextState.accessGranted !== this.state.accessGranted;\n    }\n  }, {\n    key: \"redirectRoute\",\n    value: function redirectRoute() {\n      var _this$props = this.props,\n          location = _this$props.location,\n          userRole = _this$props.userRole,\n          history = _this$props.history;\n      var pathname = location.pathname,\n          state = location.state;\n      var redirectUrl = state && state.redirectUrl ? state.redirectUrl : '/';\n      /*\r\n      User is guest\r\n      Redirect to Login Page\r\n      */\n\n      if (!userRole || userRole.length === 0) {\n        history.push({\n          pathname: '/login',\n          state: {\n            redirectUrl: pathname\n          }\n        });\n      }\n      /*\r\n      User is member\r\n      User must be on unAuthorized page or just logged in\r\n      Redirect to dashboard or redirectUrl\r\n      */\n      else {\n          history.push({\n            pathname: redirectUrl\n          });\n        }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.info('Fuse Authorization rendered', accessGranted);\n      return this.state.accessGranted ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.children) : null;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var location = props.location,\n          userRole = props.userRole;\n      var pathname = location.pathname;\n      var matched = matchRoutes(state.routes, pathname)[0];\n      return {\n        accessGranted: matched ? FuseUtils.hasPermission(matched.route.auth, userRole) : true\n      };\n    }\n  }]);\n\n  return FuseAuthorization;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  return {\n    userRole: auth.user.role\n  };\n}\n\nFuseAuthorization.contextType = AppContext;\nexport default withRouter(connect(mapStateToProps)(FuseAuthorization));","map":{"version":3,"sources":["C:\\Users\\Roan\\Documents\\GitHub\\OnTimeReactFrontEnd\\src\\@fuse\\components\\FuseAuthorization\\FuseAuthorization.js"],"names":["React","Component","FuseUtils","matchRoutes","withRouter","connect","AppContext","FuseAuthorization","props","context","routes","state","accessGranted","redirectRoute","nextProps","nextState","location","userRole","history","pathname","redirectUrl","length","push","children","matched","hasPermission","route","auth","mapStateToProps","user","role","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;IAEMC,iB;;;;;AAEF,6BAAYC,KAAZ,EAAmBC,OAAnB,EACA;AAAA;;AAAA;;AACI,2FAAMD,KAAN;AADJ,QAEWE,MAFX,GAEqBD,OAFrB,CAEWC,MAFX;AAGI,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,IADN;AAETF,MAAAA,MAAM,EAANA;AAFS,KAAb;AAHJ;AAOC;;;;wCAGD;AACI,UAAK,CAAC,KAAKC,KAAL,CAAWC,aAAjB,EACA;AACI,aAAKC,aAAL;AACH;AACJ;;;yCAGD;AACI,UAAK,CAAC,KAAKF,KAAL,CAAWC,aAAjB,EACA;AACI,aAAKC,aAAL;AACH;AACJ;;;0CAcqBC,S,EAAWC,S,EACjC;AACI,aAAOA,SAAS,CAACH,aAAV,KAA4B,KAAKD,KAAL,CAAWC,aAA9C;AACH;;;oCAGD;AAAA,wBAC0C,KAAKJ,KAD/C;AAAA,UACWQ,QADX,eACWA,QADX;AAAA,UACqBC,QADrB,eACqBA,QADrB;AAAA,UAC+BC,OAD/B,eAC+BA,OAD/B;AAAA,UAEWC,QAFX,GAE8BH,QAF9B,CAEWG,QAFX;AAAA,UAEqBR,KAFrB,GAE8BK,QAF9B,CAEqBL,KAFrB;AAGI,UAAMS,WAAW,GAAGT,KAAK,IAAIA,KAAK,CAACS,WAAf,GAA6BT,KAAK,CAACS,WAAnC,GAAiD,GAArE;AAEA;;;;;AAIA,UAAK,CAACH,QAAD,IAAaA,QAAQ,CAACI,MAAT,KAAoB,CAAtC,EACA;AACIH,QAAAA,OAAO,CAACI,IAAR,CAAa;AACTH,UAAAA,QAAQ,EAAE,QADD;AAETR,UAAAA,KAAK,EAAK;AAACS,YAAAA,WAAW,EAAED;AAAd;AAFD,SAAb;AAIH;AACD;;;;;AAPA,WAaA;AACID,UAAAA,OAAO,CAACI,IAAR,CAAa;AACTH,YAAAA,QAAQ,EAAEC;AADD,WAAb;AAGH;AACJ;;;6BAGD;AACI;AACA,aAAO,KAAKT,KAAL,CAAWC,aAAX,GAA2B,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAKJ,KAAL,CAAWe,QAA5B,CAA3B,GAAoF,IAA3F;AACH;;;6CAnD+Bf,K,EAAOG,K,EACvC;AAAA,UACWK,QADX,GACiCR,KADjC,CACWQ,QADX;AAAA,UACqBC,QADrB,GACiCT,KADjC,CACqBS,QADrB;AAAA,UAEWE,QAFX,GAEuBH,QAFvB,CAEWG,QAFX;AAII,UAAMK,OAAO,GAAGrB,WAAW,CAACQ,KAAK,CAACD,MAAP,EAAeS,QAAf,CAAX,CAAoC,CAApC,CAAhB;AAEA,aAAO;AACHP,QAAAA,aAAa,EAAEY,OAAO,GAAGtB,SAAS,CAACuB,aAAV,CAAwBD,OAAO,CAACE,KAAR,CAAcC,IAAtC,EAA4CV,QAA5C,CAAH,GAA2D;AAD9E,OAAP;AAGH;;;;EAtC2BhB,S;;AAkFhC,SAAS2B,eAAT,OACA;AAAA,MAD0BD,IAC1B,QAD0BA,IAC1B;AACI,SAAO;AACHV,IAAAA,QAAQ,EAAEU,IAAI,CAACE,IAAL,CAAUC;AADjB,GAAP;AAGH;;AAEDvB,iBAAiB,CAACwB,WAAlB,GAAgCzB,UAAhC;AAEA,eAAeF,UAAU,CAACC,OAAO,CAACuB,eAAD,CAAP,CAAyBrB,iBAAzB,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport {FuseUtils} from '@fuse';\r\nimport {matchRoutes} from 'react-router-config';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from 'app/AppContext';\r\n\r\nclass FuseAuthorization extends Component {\r\n\r\n    constructor(props, context)\r\n    {\r\n        super(props);\r\n        const {routes} = context;\r\n        this.state = {\r\n            accessGranted: true,\r\n            routes\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        if ( !this.state.accessGranted )\r\n        {\r\n            this.redirectRoute();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        if ( !this.state.accessGranted )\r\n        {\r\n            this.redirectRoute();\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state)\r\n    {\r\n        const {location, userRole} = props;\r\n        const {pathname} = location;\r\n\r\n        const matched = matchRoutes(state.routes, pathname)[0];\r\n\r\n        return {\r\n            accessGranted: matched ? FuseUtils.hasPermission(matched.route.auth, userRole) : true\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState)\r\n    {\r\n        return nextState.accessGranted !== this.state.accessGranted;\r\n    }\r\n\r\n    redirectRoute()\r\n    {\r\n        const {location, userRole, history} = this.props;\r\n        const {pathname, state} = location;\r\n        const redirectUrl = state && state.redirectUrl ? state.redirectUrl : '/';\r\n\r\n        /*\r\n        User is guest\r\n        Redirect to Login Page\r\n        */\r\n        if ( !userRole || userRole.length === 0 )\r\n        {\r\n            history.push({\r\n                pathname: '/login',\r\n                state   : {redirectUrl: pathname}\r\n            });\r\n        }\r\n        /*\r\n        User is member\r\n        User must be on unAuthorized page or just logged in\r\n        Redirect to dashboard or redirectUrl\r\n        */\r\n        else\r\n        {\r\n            history.push({\r\n                pathname: redirectUrl\r\n            });\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        // console.info('Fuse Authorization rendered', accessGranted);\r\n        return this.state.accessGranted ? <React.Fragment>{this.props.children}</React.Fragment> : null;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth})\r\n{\r\n    return {\r\n        userRole: auth.user.role\r\n    }\r\n}\r\n\r\nFuseAuthorization.contextType = AppContext;\r\n\r\nexport default withRouter(connect(mapStateToProps)(FuseAuthorization));\r\n"]},"metadata":{},"sourceType":"module"}