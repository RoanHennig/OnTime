{"ast":null,"code":"/**\r\n * DevExtreme (ui/scroll_view/ui.scroll_view.native.slide_down.js)\r\n * Version: 19.1.6 (build 19263-1729)\r\n * Build date: Fri Sep 20 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Callbacks = require(\"../../core/utils/callbacks\"),\n    NativeStrategy = require(\"./ui.scrollable.native\"),\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\n\nvar STATE_RELEASED = 0,\n    STATE_READY = 1,\n    STATE_LOADING = 2,\n    LOADING_HEIGHT = 80;\nvar SlideDownNativeScrollViewStrategy = NativeStrategy.inherit({\n  _init: function _init(scrollView) {\n    this.callBase(scrollView);\n    this._$topPocket = scrollView._$topPocket;\n    this._$bottomPocket = scrollView._$bottomPocket;\n\n    this._initCallbacks();\n  },\n  _initCallbacks: function _initCallbacks() {\n    this.pullDownCallbacks = Callbacks();\n    this.releaseCallbacks = Callbacks();\n    this.reachBottomCallbacks = Callbacks();\n  },\n  render: function render() {\n    this.callBase();\n\n    this._renderPullDown();\n\n    this._renderBottom();\n\n    this._releaseState();\n\n    this._updateDimensions();\n  },\n  _renderPullDown: function _renderPullDown() {\n    this._$topPocket.empty();\n  },\n  _renderBottom: function _renderBottom() {\n    this._$bottomPocket.empty().append(\"<progress>\");\n  },\n  _releaseState: function _releaseState() {\n    if (this._state === STATE_RELEASED) {\n      return;\n    }\n\n    this._state = STATE_RELEASED;\n  },\n  _updateDimensions: function _updateDimensions() {\n    this._scrollOffset = this._$container.prop(\"scrollHeight\") - this._$container.prop(\"clientHeight\");\n    this._containerSize = {\n      height: this._$container.prop(\"clientHeight\"),\n      width: this._$container.prop(\"clientWidth\")\n    };\n    this._contentSize = this._componentContentSize = {\n      height: this._$container.prop(\"scrollHeight\"),\n      width: this._$container.prop(\"scrollWidth\")\n    };\n  },\n  handleScroll: function handleScroll(e) {\n    this.callBase(e);\n\n    if (this._isReachBottom(this._lastLocation.top)) {\n      this._reachBottom();\n    }\n  },\n  _isReachBottom: function _isReachBottom(location) {\n    this._scrollContent = this._$container.prop(\"scrollHeight\") - this._$container.prop(\"clientHeight\");\n    return this._reachBottomEnabled && location < -this._scrollContent + LOADING_HEIGHT;\n  },\n  _reachBottom: function _reachBottom() {\n    if (this._state === STATE_LOADING) {\n      return;\n    }\n\n    this._state = STATE_LOADING;\n    this.reachBottomCallbacks.fire();\n  },\n  pullDownEnable: function pullDownEnable(enabled) {\n    this._pullDownEnabled = enabled;\n  },\n  reachBottomEnable: function reachBottomEnable(enabled) {\n    this._reachBottomEnabled = enabled;\n\n    this._$bottomPocket.toggle(enabled);\n  },\n  pendingRelease: function pendingRelease() {\n    this._state = STATE_READY;\n  },\n  release: function release() {\n    var deferred = new Deferred();\n    this._state = STATE_RELEASED;\n    this.releaseCallbacks.fire();\n    this.update();\n    return deferred.resolve().promise();\n  }\n});\nmodule.exports = SlideDownNativeScrollViewStrategy;","map":null,"metadata":{},"sourceType":"script"}