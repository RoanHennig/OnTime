{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.appointments.layout_manager.js)\r\n * Version: 19.1.6 (build 19263-1729)\r\n * Build date: Fri Sep 20 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n\n      if (\"value\" in descriptor) {\n        descriptor.writable = true;\n      }\n\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) {\n      defineProperties(Constructor.prototype, protoProps);\n    }\n\n    if (staticProps) {\n      defineProperties(Constructor, staticProps);\n    }\n\n    return Constructor;\n  };\n}();\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _common2 = _interopRequireDefault(_common);\n\nvar _uiSchedulerAppointmentsStrategy = require(\"./rendering_strategies/ui.scheduler.appointments.strategy.vertical\");\n\nvar _uiSchedulerAppointmentsStrategy2 = _interopRequireDefault(_uiSchedulerAppointmentsStrategy);\n\nvar _uiSchedulerAppointmentsStrategy3 = require(\"./rendering_strategies/ui.scheduler.appointments.strategy.horizontal\");\n\nvar _uiSchedulerAppointmentsStrategy4 = _interopRequireDefault(_uiSchedulerAppointmentsStrategy3);\n\nvar _uiSchedulerAppointmentsStrategy5 = require(\"./rendering_strategies/ui.scheduler.appointments.strategy.horizontal_month_line\");\n\nvar _uiSchedulerAppointmentsStrategy6 = _interopRequireDefault(_uiSchedulerAppointmentsStrategy5);\n\nvar _uiSchedulerAppointmentsStrategy7 = require(\"./rendering_strategies/ui.scheduler.appointments.strategy.horizontal_month\");\n\nvar _uiSchedulerAppointmentsStrategy8 = _interopRequireDefault(_uiSchedulerAppointmentsStrategy7);\n\nvar _uiSchedulerAppointmentsStrategy9 = require(\"./rendering_strategies/ui.scheduler.appointments.strategy.agenda\");\n\nvar _uiSchedulerAppointmentsStrategy10 = _interopRequireDefault(_uiSchedulerAppointmentsStrategy9);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar RENDERING_STRATEGIES = {\n  horizontal: _uiSchedulerAppointmentsStrategy4.default,\n  horizontalMonth: _uiSchedulerAppointmentsStrategy8.default,\n  horizontalMonthLine: _uiSchedulerAppointmentsStrategy6.default,\n  vertical: _uiSchedulerAppointmentsStrategy2.default,\n  agenda: _uiSchedulerAppointmentsStrategy10.default\n};\n\nvar AppointmentLayoutManager = function () {\n  function AppointmentLayoutManager(instance, renderingStrategy) {\n    _classCallCheck(this, AppointmentLayoutManager);\n\n    this.instance = instance;\n    renderingStrategy && this.initRenderingStrategy(renderingStrategy);\n  }\n\n  _createClass(AppointmentLayoutManager, [{\n    key: \"getCellDimensions\",\n    value: function value(options) {\n      if (this.instance._workSpace) {\n        options.callback(this.instance._workSpace.getCellWidth(), this.instance._workSpace.getCellHeight(), this.instance._workSpace.getAllDayHeight());\n      }\n    }\n  }, {\n    key: \"getGroupOrientation\",\n    value: function value(options) {\n      if (this.instance._workSpace) {\n        options.callback(this.instance._workSpace._getRealGroupOrientation());\n      }\n    }\n  }, {\n    key: \"initRenderingStrategy\",\n    value: function value(renderingStrategy) {\n      var Strategy = RENDERING_STRATEGIES[renderingStrategy];\n      this._renderingStrategyInstance = new Strategy(this.instance);\n      this.renderingStrategy = renderingStrategy;\n    }\n  }, {\n    key: \"createAppointmentsMap\",\n    value: function value(items) {\n      var _this = this;\n\n      this.getCellDimensions({\n        callback: function callback(width, height, allDayHeight) {\n          _this.instance._cellWidth = width;\n          _this.instance._cellHeight = height;\n          _this.instance._allDayCellHeight = allDayHeight;\n        }\n      });\n      this.getGroupOrientation({\n        callback: function callback(groupOrientation) {\n          return _this.instance._groupOrientation = groupOrientation;\n        }\n      });\n      this._positionMap = this._renderingStrategyInstance.createTaskPositionMap(items);\n      return this._createAppointmentsMapCore(items || [], this._positionMap);\n    }\n  }, {\n    key: \"_createAppointmentsMapCore\",\n    value: function value(list, positionMap) {\n      var _this2 = this;\n\n      return list.map(function (data, index) {\n        if (!_this2._renderingStrategyInstance.keepAppointmentSettings()) {\n          delete data.settings;\n        }\n\n        var appointmentSettings = positionMap[index];\n        appointmentSettings.forEach(function (settings) {\n          settings.direction = \"vertical\" === _this2.renderingStrategy && !settings.allDay ? \"vertical\" : \"horizontal\";\n        });\n        return {\n          itemData: data,\n          settings: appointmentSettings,\n          needRepaint: true,\n          needRemove: false\n        };\n      });\n    }\n  }, {\n    key: \"_hasChangesInData\",\n    value: function value(data) {\n      var updatedData = this.instance.getUpdatedAppointment();\n      return updatedData === data || this.instance.getUpdatedAppointmentKeys().some(function (item) {\n        return data[item.key] === item.value;\n      });\n    }\n  }, {\n    key: \"_hasChangesInSettings\",\n    value: function value(settingList, oldSettingList) {\n      if (settingList.length !== oldSettingList.length) {\n        return true;\n      }\n\n      for (var i = 0; i < settingList.length; i++) {\n        var newSettings = settingList[i],\n            oldSettings = oldSettingList[i];\n\n        if (oldSettings) {\n          oldSettings.sortedIndex = newSettings.sortedIndex;\n        }\n\n        if (!_common2.default.equalByValue(newSettings, oldSettings)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_getEqualAppointmentFromList\",\n    value: function value(appointment, list) {\n      for (var i = 0; i < list.length; i++) {\n        var item = list[i];\n\n        if (item.itemData === appointment.itemData) {\n          return item;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getDeletedAppointments\",\n    value: function value(appointmentList, oldAppointmentList) {\n      var result = [];\n\n      for (var i = 0; i < oldAppointmentList.length; i++) {\n        var oldAppointment = oldAppointmentList[i];\n\n        var appointment = this._getEqualAppointmentFromList(oldAppointment, appointmentList);\n\n        if (!appointment) {\n          oldAppointment.needRemove = true;\n          result.push(oldAppointment);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getRepaintedAppointments\",\n    value: function value(appointmentList, oldAppointmentList) {\n      if (0 === oldAppointmentList.length || \"agenda\" === this.renderingStrategy) {\n        return appointmentList;\n      }\n\n      for (var i = 0; i < appointmentList.length; i++) {\n        var appointment = appointmentList[i];\n\n        var oldAppointment = this._getEqualAppointmentFromList(appointment, oldAppointmentList);\n\n        if (oldAppointment) {\n          appointment.needRepaint = this._hasChangesInData(appointment.itemData) || this._hasChangesInSettings(appointment.settings, oldAppointment.settings);\n        }\n      }\n\n      return appointmentList.concat(this._getDeletedAppointments(appointmentList, oldAppointmentList));\n    }\n  }, {\n    key: \"getRenderingStrategyInstance\",\n    value: function value() {\n      return this._renderingStrategyInstance;\n    }\n  }]);\n\n  return AppointmentLayoutManager;\n}();\n\nmodule.exports = AppointmentLayoutManager;","map":null,"metadata":{},"sourceType":"script"}