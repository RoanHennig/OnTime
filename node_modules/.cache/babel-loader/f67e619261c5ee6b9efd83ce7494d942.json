{"ast":null,"code":"import { useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  var ref = useRef(); // Store current value in ref\n\n  useEffect(function () {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}\n\nexport default usePrevious;","map":{"version":3,"sources":["C:\\Users\\Roan\\Documents\\GitHub\\OnTimeReactFrontEnd\\src\\@fuse\\hooks\\usePrevious.js"],"names":["useEffect","useRef","usePrevious","value","ref","current"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EACA;AACI;AACA;AACA,MAAMC,GAAG,GAAGH,MAAM,EAAlB,CAHJ,CAKI;;AACAD,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CANJ,CAQiB;AAEb;;AACA,SAAOC,GAAG,CAACC,OAAX;AACH;;AAED,eAAeH,WAAf","sourcesContent":["import {useEffect, useRef} from 'react';\r\n\r\nfunction usePrevious(value)\r\n{\r\n    // The ref object is a generic container whose current property is mutable ...\r\n    // ... and can hold any value, similar to an instance property on a class\r\n    const ref = useRef();\r\n\r\n    // Store current value in ref\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n\r\n    // Return previous value (happens before update in useEffect above)\r\n    return ref.current;\r\n}\r\n\r\nexport default usePrevious;\r\n"]},"metadata":{},"sourceType":"module"}