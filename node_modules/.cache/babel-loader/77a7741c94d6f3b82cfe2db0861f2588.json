{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as Actions from '../actions';\nvar initialState = {\n  state: false,\n  data: null\n};\n\nvar quickPanel = function quickPanel() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.GET_QUICK_PANEL_DATA:\n      {\n        return _objectSpread({}, state, {\n          data: action.payload\n        });\n      }\n\n    case Actions.TOGGLE_QUICK_PANEL:\n      {\n        return _objectSpread({}, state, {\n          state: !state.state\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default quickPanel;","map":{"version":3,"sources":["C:\\Users\\Roan\\Documents\\GitHub\\OnTimeReactFrontEnd\\src\\app\\fuse-layouts\\shared-components\\quickPanel\\store\\reducers\\quickPanel.reducer.js"],"names":["Actions","initialState","state","data","quickPanel","action","type","GET_QUICK_PANEL_DATA","payload","TOGGLE_QUICK_PANEL"],"mappings":";;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,KADU;AAEjBC,EAAAA,IAAI,EAAG;AAFU,CAArB;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAwC;AAAA,MAA9BF,KAA8B,uEAAtBD,YAAsB;AAAA,MAARI,MAAQ;;AACvD,UAASA,MAAM,CAACC,IAAhB;AAEI,SAAKN,OAAO,CAACO,oBAAb;AACA;AACI,iCACOL,KADP;AAEIC,UAAAA,IAAI,EAAEE,MAAM,CAACG;AAFjB;AAIH;;AACD,SAAKR,OAAO,CAACS,kBAAb;AACA;AACI,iCACOP,KADP;AAEIA,UAAAA,KAAK,EAAE,CAACA,KAAK,CAACA;AAFlB;AAIH;;AACD;AACA;AACI,eAAOA,KAAP;AACH;AAnBL;AAqBH,CAtBD;;AAwBA,eAAeE,UAAf","sourcesContent":["import * as Actions from '../actions';\r\n\r\nconst initialState = {\r\n    state: false,\r\n    data : null\r\n};\r\n\r\nconst quickPanel = function (state = initialState, action) {\r\n    switch ( action.type )\r\n    {\r\n        case Actions.GET_QUICK_PANEL_DATA:\r\n        {\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            };\r\n        }\r\n        case Actions.TOGGLE_QUICK_PANEL:\r\n        {\r\n            return {\r\n                ...state,\r\n                state: !state.state\r\n            };\r\n        }\r\n        default:\r\n        {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default quickPanel;\r\n"]},"metadata":{},"sourceType":"module"}