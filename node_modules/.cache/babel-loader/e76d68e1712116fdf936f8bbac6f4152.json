{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport history from '@history';\nimport { setDefaultSettings, setInitialSettings } from 'app/store/actions/fuse';\nimport _ from '@lodash';\nimport store from 'app/store';\nimport * as Actions from 'app/store/actions';\nimport firebase from 'firebase/app';\nimport firebaseService from 'app/services/firebaseService';\nimport auth0Service from 'app/services/auth0Service';\nimport jwtService from 'app/services/jwtService';\nexport var SET_USER_DATA = '[USER] SET DATA';\nexport var REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport var USER_LOGGED_OUT = '[USER] LOGGED OUT';\n/**\r\n * Set user data from Auth0 token data\r\n */\n\nexport function setUserDataAuth0(tokenData) {\n  var user = {\n    role: tokenData.app_metadata.roles ? tokenData.app_metadata.roles : ['admin'],\n    from: 'auth0',\n    data: {\n      displayName: tokenData.username,\n      photoURL: tokenData.picture,\n      email: tokenData.email,\n      settings: tokenData.user_metadata && tokenData.user_metadata.settings ? tokenData.user_metadata.settings : {},\n      shortcuts: tokenData.user_metadata && tokenData.user_metadata.shortcuts ? tokenData.user_metadata.shortcuts : []\n    }\n  };\n  return setUserData(user);\n}\n/**\r\n * Set user data from Firebase data\r\n */\n\nexport function setUserDataFirebase(user, authUser) {\n  if (user && user.data && user.data.settings && user.data.settings.theme && user.data.settings.layout && user.data.settings.layout.style) {\n    // Set user data but do not update\n    return setUserData(user);\n  } else {\n    // Create missing user settings\n    return createUserSettingsFirebase(authUser);\n  }\n}\n/**\r\n * Create User Settings with Firebase data\r\n */\n\nexport function createUserSettingsFirebase(authUser) {\n  return function (dispatch, getState) {\n    var guestUser = getState().auth.user;\n    var fuseDefaultSettings = getState().fuse.settings.defaults;\n    var currentUser = firebase.auth().currentUser;\n    /**\r\n     * Merge with current Settings\r\n     */\n\n    var user = _.merge({}, guestUser, {\n      uid: authUser.uid,\n      from: 'firebase',\n      role: [\"admin\"],\n      data: {\n        displayName: authUser.displayName,\n        email: authUser.email,\n        settings: _objectSpread({}, fuseDefaultSettings)\n      }\n    });\n\n    currentUser.updateProfile(user.data);\n    updateUserData(user);\n    return dispatch(setUserData(user));\n  };\n}\n/**\r\n * Set User Data\r\n */\n\nexport function setUserData(user) {\n  return function (dispatch) {\n    /*\r\n    Set User Settings\r\n     */\n    dispatch(setDefaultSettings(user.data.settings));\n    /*\r\n    Set User Data\r\n     */\n\n    dispatch({\n      type: SET_USER_DATA,\n      payload: user\n    });\n  };\n}\n/**\r\n * Update User Settings\r\n */\n\nexport function updateUserSettings(settings) {\n  return function (dispatch, getState) {\n    var oldUser = getState().auth.user;\n\n    var user = _.merge({}, oldUser, {\n      data: {\n        settings: settings\n      }\n    });\n\n    updateUserData(user);\n    return dispatch(setUserData(user));\n  };\n}\n/**\r\n * Update User Shortcuts\r\n */\n\nexport function updateUserShortcuts(shortcuts) {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    var newUser = _objectSpread({}, user, {\n      data: _objectSpread({}, user.data, {\n        shortcuts: shortcuts\n      })\n    });\n\n    updateUserData(newUser);\n    return dispatch(setUserData(newUser));\n  };\n}\n/**\r\n * Remove User Data\r\n */\n\nexport function removeUserData() {\n  return {\n    type: REMOVE_USER_DATA\n  };\n}\n/**\r\n * Logout\r\n */\n\nexport function logoutUser() {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    if (!user.role || user.role.length === 0) // is guest\n      {\n        return null;\n      }\n\n    history.push({\n      pathname: '/'\n    });\n\n    switch (user.from) {\n      case 'firebase':\n        {\n          firebaseService.signOut();\n          break;\n        }\n\n      case 'auth0':\n        {\n          auth0Service.logout();\n          break;\n        }\n\n      default:\n        {\n          jwtService.logout();\n        }\n    }\n\n    dispatch(setInitialSettings());\n    dispatch({\n      type: USER_LOGGED_OUT\n    });\n  };\n}\n/**\r\n * Update User Data\r\n */\n\nfunction updateUserData(user) {\n  if (!user.role || user.role.length === 0) // is guest\n    {\n      return;\n    }\n\n  switch (user.from) {\n    case 'firebase':\n      {\n        firebaseService.updateUserData(user).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved to firebase\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n\n    case 'auth0':\n      {\n        auth0Service.updateUserData({\n          settings: user.data.settings,\n          shortcuts: user.data.shortcuts\n        }).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved to auth0\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n\n    default:\n      {\n        jwtService.updateUserData(user).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved with api\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Roan\\Documents\\GitHub\\OnTimeReactFrontEnd\\src\\app\\auth\\store\\actions\\user.actions.js"],"names":["history","setDefaultSettings","setInitialSettings","_","store","Actions","firebase","firebaseService","auth0Service","jwtService","SET_USER_DATA","REMOVE_USER_DATA","USER_LOGGED_OUT","setUserDataAuth0","tokenData","user","role","app_metadata","roles","from","data","displayName","username","photoURL","picture","email","settings","user_metadata","shortcuts","setUserData","setUserDataFirebase","authUser","theme","layout","style","createUserSettingsFirebase","dispatch","getState","guestUser","auth","fuseDefaultSettings","fuse","defaults","currentUser","merge","uid","updateProfile","updateUserData","type","payload","updateUserSettings","oldUser","updateUserShortcuts","newUser","removeUserData","logoutUser","length","push","pathname","signOut","logout","then","showMessage","message","catch","error"],"mappings":"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","sourcesContent":["import history from '@history';\r\nimport {setDefaultSettings, setInitialSettings} from 'app/store/actions/fuse';\r\nimport _ from '@lodash';\r\nimport store from 'app/store';\r\nimport * as Actions from 'app/store/actions';\r\nimport firebase from 'firebase/app';\r\nimport firebaseService from 'app/services/firebaseService';\r\nimport auth0Service from 'app/services/auth0Service';\r\nimport jwtService from 'app/services/jwtService';\r\n\r\nexport const SET_USER_DATA = '[USER] SET DATA';\r\nexport const REMOVE_USER_DATA = '[USER] REMOVE DATA';\r\nexport const USER_LOGGED_OUT = '[USER] LOGGED OUT';\r\n\r\n/**\r\n * Set user data from Auth0 token data\r\n */\r\nexport function setUserDataAuth0(tokenData)\r\n{\r\n    const user = {\r\n        role: tokenData.app_metadata.roles ? tokenData.app_metadata.roles : ['admin'],\r\n        from: 'auth0',\r\n        data: {\r\n            displayName: tokenData.username,\r\n            photoURL   : tokenData.picture,\r\n            email      : tokenData.email,\r\n            settings   : (tokenData.user_metadata && tokenData.user_metadata.settings) ? tokenData.user_metadata.settings : {},\r\n            shortcuts  : (tokenData.user_metadata && tokenData.user_metadata.shortcuts) ? tokenData.user_metadata.shortcuts : []\r\n        }\r\n    };\r\n\r\n    return setUserData(user);\r\n}\r\n\r\n/**\r\n * Set user data from Firebase data\r\n */\r\nexport function setUserDataFirebase(user, authUser)\r\n{\r\n    if ( user && user.data &&\r\n        user.data.settings &&\r\n        user.data.settings.theme &&\r\n        user.data.settings.layout &&\r\n        user.data.settings.layout.style )\r\n    {\r\n        // Set user data but do not update\r\n        return setUserData(user);\r\n    }\r\n    else\r\n    {\r\n        // Create missing user settings\r\n        return createUserSettingsFirebase(authUser);\r\n    }\r\n}\r\n\r\n/**\r\n * Create User Settings with Firebase data\r\n */\r\nexport function createUserSettingsFirebase(authUser)\r\n{\r\n    return (dispatch, getState) => {\r\n        const guestUser = getState().auth.user;\r\n        const fuseDefaultSettings = getState().fuse.settings.defaults;\r\n        const currentUser = firebase.auth().currentUser;\r\n\r\n        /**\r\n         * Merge with current Settings\r\n         */\r\n        const user = _.merge({}, guestUser,\r\n            {\r\n                uid : authUser.uid,\r\n                from: 'firebase',\r\n                role: [\"admin\"],\r\n                data: {\r\n                    displayName: authUser.displayName,\r\n                    email      : authUser.email,\r\n                    settings   : {...fuseDefaultSettings}\r\n                }\r\n            }\r\n        );\r\n        currentUser.updateProfile(user.data);\r\n\r\n        updateUserData(user);\r\n        return dispatch(setUserData(user));\r\n    }\r\n}\r\n\r\n/**\r\n * Set User Data\r\n */\r\nexport function setUserData(user)\r\n{\r\n    return (dispatch) => {\r\n\r\n        /*\r\n        Set User Settings\r\n         */\r\n        dispatch(setDefaultSettings(user.data.settings));\r\n\r\n        /*\r\n        Set User Data\r\n         */\r\n        dispatch({\r\n            type   : SET_USER_DATA,\r\n            payload: user\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Update User Settings\r\n */\r\nexport function updateUserSettings(settings)\r\n{\r\n    return (dispatch, getState) => {\r\n        const oldUser = getState().auth.user;\r\n        const user = _.merge({}, oldUser, {data: {settings}});\r\n\r\n        updateUserData(user);\r\n\r\n        return dispatch(setUserData(user));\r\n    }\r\n}\r\n\r\n/**\r\n * Update User Shortcuts\r\n */\r\nexport function updateUserShortcuts(shortcuts)\r\n{\r\n    return (dispatch, getState) => {\r\n        const user = getState().auth.user;\r\n        const newUser = {\r\n            ...user,\r\n            data: {\r\n                ...user.data,\r\n                shortcuts\r\n            }\r\n        };\r\n\r\n        updateUserData(newUser);\r\n\r\n        return dispatch(setUserData(newUser));\r\n    }\r\n}\r\n\r\n/**\r\n * Remove User Data\r\n */\r\nexport function removeUserData()\r\n{\r\n    return {\r\n        type: REMOVE_USER_DATA\r\n    }\r\n}\r\n\r\n/**\r\n * Logout\r\n */\r\nexport function logoutUser()\r\n{\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        const user = getState().auth.user;\r\n\r\n        if ( !user.role || user.role.length === 0 )// is guest\r\n        {\r\n            return null;\r\n        }\r\n\r\n        history.push({\r\n            pathname: '/'\r\n        });\r\n\r\n        switch ( user.from )\r\n        {\r\n            case 'firebase':\r\n            {\r\n                firebaseService.signOut();\r\n                break;\r\n            }\r\n            case 'auth0':\r\n            {\r\n                auth0Service.logout();\r\n                break;\r\n            }\r\n            default:\r\n            {\r\n                jwtService.logout();\r\n            }\r\n        }\r\n\r\n        dispatch(setInitialSettings());\r\n\r\n        dispatch({\r\n            type: USER_LOGGED_OUT\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Update User Data\r\n */\r\nfunction updateUserData(user)\r\n{\r\n    if ( !user.role || user.role.length === 0 )// is guest\r\n    {\r\n        return;\r\n    }\r\n\r\n    switch ( user.from )\r\n    {\r\n        case 'firebase':\r\n        {\r\n            firebaseService.updateUserData(user)\r\n                .then(() => {\r\n                    store.dispatch(Actions.showMessage({message: \"User data saved to firebase\"}));\r\n                })\r\n                .catch(error => {\r\n                    store.dispatch(Actions.showMessage({message: error.message}));\r\n                });\r\n            break;\r\n        }\r\n        case 'auth0':\r\n        {\r\n            auth0Service.updateUserData({\r\n                settings : user.data.settings,\r\n                shortcuts: user.data.shortcuts\r\n            })\r\n                .then(() => {\r\n                    store.dispatch(Actions.showMessage({message: \"User data saved to auth0\"}));\r\n                })\r\n                .catch(error => {\r\n                    store.dispatch(Actions.showMessage({message: error.message}));\r\n                });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n            jwtService.updateUserData(user)\r\n                .then(() => {\r\n                    store.dispatch(Actions.showMessage({message: \"User data saved with api\"}));\r\n                })\r\n                .catch(error => {\r\n                    store.dispatch(Actions.showMessage({message: error.message}));\r\n                });\r\n            break;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}