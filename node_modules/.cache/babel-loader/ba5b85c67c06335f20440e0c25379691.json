{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.date_box.strategy.date_view.js)\r\n * Version: 19.1.6 (build 19263-1729)\r\n * Build date: Fri Sep 20 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n    window = require(\"../../core/utils/window\").getWindow(),\n    DateView = require(\"./ui.date_view\"),\n    DateBoxStrategy = require(\"./ui.date_box.strategy\"),\n    support = require(\"../../core/utils/support\"),\n    extend = require(\"../../core/utils/extend\").extend,\n    dateUtils = require(\"./ui.date_utils\"),\n    messageLocalization = require(\"../../localization/message\");\n\nvar DateViewStrategy = DateBoxStrategy.inherit({\n  NAME: \"DateView\",\n  getDefaultOptions: function getDefaultOptions() {\n    return extend(this.callBase(), {\n      openOnFieldClick: true,\n      applyButtonText: messageLocalization.format(\"OK\")\n    });\n  },\n  getDisplayFormat: function getDisplayFormat(displayFormat) {\n    return displayFormat || dateUtils.FORMATS_MAP[this.dateBox.option(\"type\")];\n  },\n  popupConfig: function popupConfig(config) {\n    return {\n      showTitle: true,\n      toolbarItems: this.dateBox._popupToolbarItemsConfig(),\n      onInitialized: config.onInitialized,\n      defaultOptionsRules: [{\n        device: function device(_device) {\n          return \"win\" === _device.platform && _device.version && 8 === _device.version[0];\n        },\n        options: {\n          showNames: true\n        }\n      }, {\n        device: function device(_device2) {\n          return \"win\" === _device2.platform && _device2.phone && _device2.version && 8 === _device2.version[0];\n        },\n        options: {\n          animation: null\n        }\n      }, {\n        device: {\n          platform: \"android\"\n        },\n        options: {\n          width: 333,\n          height: 331\n        }\n      }, {\n        device: function device(_device3) {\n          var platform = _device3.platform,\n              version = _device3.version;\n          return \"generic\" === platform || \"ios\" === platform || \"win\" === platform && version && 10 === version[0];\n        },\n        options: {\n          width: \"auto\",\n          height: \"auto\"\n        }\n      }, {\n        device: function device(_device4) {\n          var platform = _device4.platform,\n              phone = _device4.phone;\n          return \"generic\" === platform && phone;\n        },\n        options: {\n          width: 333,\n          maxWidth: \"100%\",\n          maxHeight: \"100%\",\n          height: \"auto\",\n          position: {\n            collision: \"flipfit flip\"\n          }\n        }\n      }, {\n        device: {\n          platform: \"ios\",\n          phone: true\n        },\n        options: {\n          width: \"100%\",\n          position: {\n            my: \"bottom\",\n            at: \"bottom\",\n            of: window\n          }\n        }\n      }]\n    };\n  },\n  _renderWidget: function _renderWidget() {\n    if (support.inputType(this.dateBox.option(\"mode\")) && this.dateBox._isNativeType() || this.dateBox.option(\"readOnly\")) {\n      if (this._widget) {\n        this._widget.$element().remove();\n\n        this._widget = null;\n      }\n\n      return;\n    }\n\n    var popup = this._getPopup();\n\n    if (this._widget) {\n      this._widget.option(this._getWidgetOptions());\n    } else {\n      var element = $(\"<div>\").appendTo(popup.$content());\n      this._widget = this._createWidget(element);\n    }\n\n    this._widget.$element().appendTo(this._getWidgetContainer());\n  },\n  _getWidgetName: function _getWidgetName() {\n    return DateView;\n  },\n  _getWidgetOptions: function _getWidgetOptions() {\n    return {\n      value: this.dateBoxValue() || new Date(),\n      type: this.dateBox.option(\"type\"),\n      minDate: this.dateBox.dateOption(\"min\") || new Date(1900, 0, 1),\n      maxDate: this.dateBox.dateOption(\"max\") || new Date(Date.now() + 50 * dateUtils.ONE_YEAR),\n      onDisposing: function () {\n        this._widget = null;\n      }.bind(this)\n    };\n  }\n});\nmodule.exports = DateViewStrategy;","map":null,"metadata":{},"sourceType":"script"}