{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\src\\\\app\\\\main\\\\pages\\\\business-setup\\\\Steps\\\\Step2.js\";\nimport React, { Component } from 'react';\nimport * as Actions from './store/actions';\nimport * as BusinessSetupActions from '../store/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport validationEngine from 'devextreme/ui/validation_engine';\nimport service from './businessTypes.js';\nimport Form, { Item, RequiredRule } from 'devextreme-react/form';\n\nvar Step2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Step2, _Component);\n\n  function Step2(props) {\n    var _this;\n\n    _classCallCheck(this, Step2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Step2).call(this, props));\n    _this.onRequiredFieldChanged = _this.onRequiredFieldChanged.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Step2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.scrollTo(0, 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$stepDetai = this.props.stepDetails,\n          labelLocation = _this$props$stepDetai.labelLocation,\n          readOnly = _this$props$stepDetai.readOnly,\n          showColon = _this$props$stepDetai.showColon,\n          colCount = _this$props$stepDetai.colCount;\n      return React.createElement(Form, {\n        id: 'form',\n        formData: this.props.stepDetails.businessTypeDetails,\n        readOnly: readOnly,\n        showColonAfterLabel: showColon,\n        labelLocation: labelLocation,\n        colCount: colCount,\n        showValidationSummary: true,\n        validationGroup: 'businessType',\n        stylingMode: 'outlined',\n        onFieldDataChanged: this.onRequiredFieldChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Item, {\n        dataField: 'businessType',\n        editorType: 'dxSelectBox',\n        editorOptions: {\n          dataSource: service.getBusinessTypes(),\n          displayExpr: 'Name',\n          searchEnabled: true,\n          searchMode: 'contains',\n          searchExpr: 'Name',\n          searchTimeout: 200,\n          minSearchLength: 2,\n          placeholder: 'what describes your business best...',\n          showDataBeforeSearch: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(RequiredRule, {\n        message: 'Business Type is required',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Item, {\n        dataField: 'businessSize',\n        editorType: 'dxSelectBox',\n        editorOptions: {\n          dataSource: service.getBusinessSize(),\n          displayExpr: 'Name',\n          placeholder: 'how many members are there within your business...',\n          searchEnabled: false,\n          showDataBeforeSearch: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(RequiredRule, {\n        message: 'Business Size is required',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onRequiredFieldChanged\",\n    value: function onRequiredFieldChanged(e) {\n      var result = validationEngine.validateGroup('businessType');\n\n      if (result.isValid && this.props.stepDetails.businessTypeDetails.businessType && this.props.stepDetails.businessTypeDetails.businessType) {\n        this.props.setEnableNext();\n        console.log(this.props.stepDetails.businessTypeDetails);\n      } else {\n        this.props.setDisableNext();\n      }\n    }\n  }]);\n\n  return Step2;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stepDetails: state.businessSetupSteps.Step2\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setBusinessType: Actions.setBusinessType,\n    setEnableNext: BusinessSetupActions.setEnableNext,\n    setDisableNext: BusinessSetupActions.setDisableNext\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Step2);","map":{"version":3,"sources":["C:\\Users\\Roan\\Documents\\GitHub\\OnTimeReactFrontEnd\\src\\app\\main\\pages\\business-setup\\Steps\\Step2.js"],"names":["React","Component","Actions","BusinessSetupActions","connect","bindActionCreators","validationEngine","service","Form","Item","RequiredRule","Step2","props","onRequiredFieldChanged","bind","window","scrollTo","stepDetails","labelLocation","readOnly","showColon","colCount","businessTypeDetails","dataSource","getBusinessTypes","displayExpr","searchEnabled","searchMode","searchExpr","searchTimeout","minSearchLength","placeholder","showDataBeforeSearch","getBusinessSize","e","result","validateGroup","isValid","businessType","setEnableNext","console","log","setDisableNext","mapStateToProps","state","businessSetupSteps","mapDispatchToProps","dispatch","setBusinessType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as Actions from './store/actions';\r\nimport * as BusinessSetupActions from '../store/actions';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport validationEngine from 'devextreme/ui/validation_engine';\r\nimport service from './businessTypes.js';\r\nimport Form, {Item, RequiredRule } from 'devextreme-react/form';\r\n\r\nclass Step2 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onRequiredFieldChanged = this.onRequiredFieldChanged.bind(this); \r\n      }  \r\n      \r\n      componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n      }\r\n      \r\n    render () {\r\n        const {\r\n            labelLocation,\r\n            readOnly,\r\n            showColon,\r\n            colCount\r\n          } = this.props.stepDetails;\r\n          return (\r\n                    <Form\r\n                    id={'form'}\r\n                    formData={this.props.stepDetails.businessTypeDetails}\r\n                    readOnly={readOnly}\r\n                    showColonAfterLabel={showColon}\r\n                    labelLocation={labelLocation}\r\n                    colCount={colCount}\r\n                    showValidationSummary={true}\r\n                    validationGroup={'businessType'}\r\n                    stylingMode= {'outlined'}\r\n                    onFieldDataChanged = {this.onRequiredFieldChanged}\r\n                    >           \r\n                        <Item dataField={'businessType'} editorType={'dxSelectBox'} editorOptions={{ dataSource: service.getBusinessTypes(),\r\n                            displayExpr:'Name',\r\n                            searchEnabled:true,\r\n                            searchMode:'contains',\r\n                            searchExpr:'Name',\r\n                            searchTimeout:200,\r\n                            minSearchLength:2,\r\n                            placeholder:'what describes your business best...',\r\n                            showDataBeforeSearch:true\r\n                            }}>\r\n                            <RequiredRule message={'Business Type is required'} />\r\n                        </Item>  \r\n                        <Item dataField={'businessSize'} editorType={'dxSelectBox'} editorOptions={{ dataSource: service.getBusinessSize(),\r\n                            displayExpr:'Name',                    \r\n                            placeholder:'how many members are there within your business...',\r\n                            searchEnabled:false,\r\n                            showDataBeforeSearch:true\r\n                            }}>\r\n                            <RequiredRule message={'Business Size is required'} />\r\n                        </Item>  \r\n                    </Form>\r\n          )\r\n    }\r\n\r\n    onRequiredFieldChanged(e) {\r\n        var result = validationEngine.validateGroup('businessType')\r\n        if(result.isValid && this.props.stepDetails.businessTypeDetails.businessType && this.props.stepDetails.businessTypeDetails.businessType){\r\n            this.props.setEnableNext();       \r\n            console.log(this.props.stepDetails.businessTypeDetails);    \r\n        }\r\n        else {\r\n            this.props.setDisableNext();\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stepDetails: state.businessSetupSteps.Step2\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return bindActionCreators({\r\n        setBusinessType             : Actions.setBusinessType,\r\n        setEnableNext               : BusinessSetupActions.setEnableNext,\r\n        setDisableNext              : BusinessSetupActions.setDisableNext,\r\n    },\r\n    dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Step2);"]},"metadata":{},"sourceType":"module"}