{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\src\\\\@fuse\\\\components\\\\FuseNavigation\\\\FuseNavigation.js\";\nimport React from 'react';\nimport { Divider, List } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FuseNavVerticalGroup from './vertical/FuseNavVerticalGroup';\nimport FuseNavVerticalCollapse from './vertical/FuseNavVerticalCollapse';\nimport FuseNavVerticalItem from './vertical/FuseNavVerticalItem';\nimport FuseNavVerticalLink from './vertical/FuseNavVerticalLink';\nimport FuseNavHorizontalGroup from './horizontal/FuseNavHorizontalGroup';\nimport FuseNavHorizontalCollapse from './horizontal/FuseNavHorizontalCollapse';\nimport FuseNavHorizontalItem from './horizontal/FuseNavHorizontalItem';\nimport FuseNavHorizontalLink from './horizontal/FuseNavHorizontalLink';\n\nfunction FuseNavigation(props) {\n  var navigation = props.navigation,\n      layout = props.layout,\n      active = props.active,\n      dense = props.dense,\n      className = props.className;\n  var verticalNav = React.createElement(List, {\n    className: clsx(\"navigation whitespace-no-wrap\", className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, navigation.map(function (item) {\n    return React.createElement(React.Fragment, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, item.type === 'group' && React.createElement(FuseNavVerticalGroup, {\n      item: item,\n      nestedLevel: 0,\n      active: active,\n      dense: dense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), item.type === 'collapse' && React.createElement(FuseNavVerticalCollapse, {\n      item: item,\n      nestedLevel: 0,\n      active: active,\n      dense: dense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), item.type === 'item' && React.createElement(FuseNavVerticalItem, {\n      item: item,\n      nestedLevel: 0,\n      active: active,\n      dense: dense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), item.type === 'link' && React.createElement(FuseNavVerticalLink, {\n      item: item,\n      nestedLevel: 0,\n      active: active,\n      dense: dense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), item.type === 'divider' && React.createElement(Divider, {\n      className: \"my-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }));\n  var horizontalNav = React.createElement(List, {\n    className: clsx(\"navigation whitespace-no-wrap flex p-0\", className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, navigation.map(function (item) {\n    return React.createElement(React.Fragment, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, item.type === 'group' && React.createElement(FuseNavHorizontalGroup, {\n      item: item,\n      nestedLevel: 0,\n      dense: dense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), item.type === 'collapse' && React.createElement(FuseNavHorizontalCollapse, {\n      item: item,\n      nestedLevel: 0,\n      dense: dense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), item.type === 'item' && React.createElement(FuseNavHorizontalItem, {\n      item: item,\n      nestedLevel: 0,\n      dense: dense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), item.type === 'link' && React.createElement(FuseNavHorizontalLink, {\n      item: item,\n      nestedLevel: 0,\n      dense: dense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), item.type === 'divider' && React.createElement(Divider, {\n      className: \"my-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }));\n\n  if (navigation.length > 0) {\n    switch (layout) {\n      case 'horizontal':\n        {\n          return horizontalNav;\n        }\n\n      case 'vertical':\n      default:\n        {\n          return verticalNav;\n        }\n    }\n  } else {\n    return null;\n  }\n}\n\nFuseNavigation.propTypes = {\n  navigation: PropTypes.array.isRequired\n};\nFuseNavigation.defaultProps = {\n  layout: \"vertical\"\n};\nexport default React.memo(FuseNavigation);","map":{"version":3,"sources":["C:\\Users\\Roan\\Documents\\GitHub\\OnTimeReactFrontEnd\\src\\@fuse\\components\\FuseNavigation\\FuseNavigation.js"],"names":["React","Divider","List","PropTypes","clsx","FuseNavVerticalGroup","FuseNavVerticalCollapse","FuseNavVerticalItem","FuseNavVerticalLink","FuseNavHorizontalGroup","FuseNavHorizontalCollapse","FuseNavHorizontalItem","FuseNavHorizontalLink","FuseNavigation","props","navigation","layout","active","dense","className","verticalNav","map","item","id","type","horizontalNav","length","propTypes","array","isRequired","defaultProps","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Divider, List} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport FuseNavVerticalGroup from './vertical/FuseNavVerticalGroup';\r\nimport FuseNavVerticalCollapse from './vertical/FuseNavVerticalCollapse';\r\nimport FuseNavVerticalItem from './vertical/FuseNavVerticalItem';\r\nimport FuseNavVerticalLink from './vertical/FuseNavVerticalLink';\r\nimport FuseNavHorizontalGroup from './horizontal/FuseNavHorizontalGroup';\r\nimport FuseNavHorizontalCollapse from './horizontal/FuseNavHorizontalCollapse';\r\nimport FuseNavHorizontalItem from './horizontal/FuseNavHorizontalItem';\r\nimport FuseNavHorizontalLink from './horizontal/FuseNavHorizontalLink';\r\n\r\nfunction FuseNavigation(props)\r\n{\r\n    const {navigation, layout, active, dense, className} = props;\r\n\r\n    const verticalNav = (\r\n        <List className={clsx(\"navigation whitespace-no-wrap\", className)}>\r\n            {\r\n                navigation.map((item) => (\r\n\r\n                    <React.Fragment key={item.id}>\r\n\r\n                        {item.type === 'group' && (\r\n                            <FuseNavVerticalGroup item={item} nestedLevel={0} active={active} dense={dense}/>\r\n                        )}\r\n\r\n                        {item.type === 'collapse' && (\r\n                            <FuseNavVerticalCollapse item={item} nestedLevel={0} active={active} dense={dense}/>\r\n                        )}\r\n\r\n                        {item.type === 'item' && (\r\n                            <FuseNavVerticalItem item={item} nestedLevel={0} active={active} dense={dense}/>\r\n                        )}\r\n\r\n                        {item.type === 'link' && (\r\n                            <FuseNavVerticalLink item={item} nestedLevel={0} active={active} dense={dense}/>\r\n                        )}\r\n\r\n                        {item.type === 'divider' && (\r\n                            <Divider className=\"my-16\"/>\r\n                        )}\r\n                    </React.Fragment>\r\n                ))\r\n            }\r\n        </List>\r\n    );\r\n\r\n    const horizontalNav = (\r\n        <List className={clsx(\"navigation whitespace-no-wrap flex p-0\", className)}>\r\n            {\r\n                navigation.map((item) => (\r\n\r\n                    <React.Fragment key={item.id}>\r\n\r\n                        {item.type === 'group' && (\r\n                            <FuseNavHorizontalGroup item={item} nestedLevel={0} dense={dense}/>\r\n                        )}\r\n\r\n                        {item.type === 'collapse' && (\r\n                            <FuseNavHorizontalCollapse item={item} nestedLevel={0} dense={dense}/>\r\n                        )}\r\n\r\n                        {item.type === 'item' && (\r\n                            <FuseNavHorizontalItem item={item} nestedLevel={0} dense={dense}/>\r\n                        )}\r\n\r\n                        {item.type === 'link' && (\r\n                            <FuseNavHorizontalLink item={item} nestedLevel={0} dense={dense}/>\r\n                        )}\r\n\r\n                        {item.type === 'divider' && (\r\n                            <Divider className=\"my-16\"/>\r\n                        )}\r\n                    </React.Fragment>\r\n                ))\r\n            }\r\n        </List>\r\n    );\r\n\r\n    if ( navigation.length > 0 )\r\n    {\r\n        switch ( layout )\r\n        {\r\n            case 'horizontal':\r\n            {\r\n                return horizontalNav;\r\n            }\r\n            case 'vertical':\r\n            default:\r\n            {\r\n                return verticalNav;\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        return null;\r\n    }\r\n}\r\n\r\nFuseNavigation.propTypes = {\r\n    navigation: PropTypes.array.isRequired\r\n};\r\n\r\nFuseNavigation.defaultProps = {\r\n    layout: \"vertical\"\r\n};\r\n\r\nexport default React.memo(FuseNavigation);\r\n"]},"metadata":{},"sourceType":"module"}