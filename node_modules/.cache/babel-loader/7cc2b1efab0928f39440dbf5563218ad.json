{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roan\\\\Documents\\\\GitHub\\\\OnTimeReactFrontEnd\\\\src\\\\@fuse\\\\components\\\\formsy\\\\CheckboxFormsy.js\";\nimport React from 'react';\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\nimport { withFormsy } from 'formsy-react';\nimport _ from '@lodash';\n\nfunction CheckboxFormsy(props) {\n  var importedProps = _.pick(props, ['checkedIcon', 'classes', 'color', 'disabled', 'disableRipple', 'icon', 'id', 'indeterminate', 'indeterminateIcon', 'inputProps', 'inputRef', 'onChange', 'variant']); // An error message is returned only if the component is invalid\n\n\n  var errorMessage = props.getErrorMessage();\n  var value = props.getValue();\n\n  function changeValue(event) {\n    props.setValue(event.target.checked);\n\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  }\n\n  return React.createElement(FormControl, {\n    error: Boolean(errorMessage),\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, Object.assign({}, importedProps, {\n      type: \"checkbox\",\n      checked: value,\n      onChange: changeValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })),\n    label: props.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), Boolean(errorMessage) && React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, errorMessage));\n}\n\nexport default React.memo(withFormsy(CheckboxFormsy));","map":{"version":3,"sources":["C:\\Users\\Roan\\Documents\\GitHub\\OnTimeReactFrontEnd\\src\\@fuse\\components\\formsy\\CheckboxFormsy.js"],"names":["React","Checkbox","FormControl","FormControlLabel","FormHelperText","withFormsy","_","CheckboxFormsy","props","importedProps","pick","errorMessage","getErrorMessage","value","getValue","changeValue","event","setValue","target","checked","onChange","Boolean","className","label","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,gBAA/B,EAAiDC,cAAjD,QAAsE,mBAAtE;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,CAAP,MAAc,SAAd;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EACA;AACI,MAAMC,aAAa,GAAGH,CAAC,CAACI,IAAF,CAAOF,KAAP,EAAc,CAChC,aADgC,EAEhC,SAFgC,EAGhC,OAHgC,EAIhC,UAJgC,EAKhC,eALgC,EAMhC,MANgC,EAOhC,IAPgC,EAQhC,eARgC,EAShC,mBATgC,EAUhC,YAVgC,EAWhC,UAXgC,EAYhC,UAZgC,EAahC,SAbgC,CAAd,CAAtB,CADJ,CAiBI;;;AACA,MAAMG,YAAY,GAAGH,KAAK,CAACI,eAAN,EAArB;AACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,QAAN,EAAd;;AAEA,WAASC,WAAT,CAAqBC,KAArB,EACA;AACIR,IAAAA,KAAK,CAACS,QAAN,CAAeD,KAAK,CAACE,MAAN,CAAaC,OAA5B;;AACA,QAAKX,KAAK,CAACY,QAAX,EACA;AACIZ,MAAAA,KAAK,CAACY,QAAN,CAAeJ,KAAf;AACH;AACJ;;AAED,SACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEK,OAAO,CAACV,YAAD,CAA3B;AAA2C,IAAA,SAAS,EAAEH,KAAK,CAACc,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,OAAO,EACH,oBAAC,QAAD,oBACQb,aADR;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,OAAO,EAAEI,KAHb;AAII,MAAA,QAAQ,EAAEE,WAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFR;AASI,IAAA,KAAK,EAAEP,KAAK,CAACe,KATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYKF,OAAO,CAACV,YAAD,CAAP,IACG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,YAAjB,CAbR,CADJ;AAkBH;;AAED,eAAeX,KAAK,CAACwB,IAAN,CAAWnB,UAAU,CAACE,cAAD,CAArB,CAAf","sourcesContent":["import React from 'react';\r\nimport {Checkbox, FormControl, FormControlLabel, FormHelperText} from '@material-ui/core';\r\nimport {withFormsy} from 'formsy-react';\r\nimport _ from '@lodash';\r\n\r\nfunction CheckboxFormsy(props)\r\n{\r\n    const importedProps = _.pick(props, [\r\n        'checkedIcon',\r\n        'classes',\r\n        'color',\r\n        'disabled',\r\n        'disableRipple',\r\n        'icon',\r\n        'id',\r\n        'indeterminate',\r\n        'indeterminateIcon',\r\n        'inputProps',\r\n        'inputRef',\r\n        'onChange',\r\n        'variant'\r\n    ]);\r\n\r\n    // An error message is returned only if the component is invalid\r\n    const errorMessage = props.getErrorMessage();\r\n    const value = props.getValue();\r\n\r\n    function changeValue(event)\r\n    {\r\n        props.setValue(event.target.checked);\r\n        if ( props.onChange )\r\n        {\r\n            props.onChange(event);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl error={Boolean(errorMessage)} className={props.className}>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        {...importedProps}\r\n                        type='checkbox'\r\n                        checked={value}\r\n                        onChange={changeValue}\r\n                    />\r\n                }\r\n                label={props.label}\r\n            />\r\n            {Boolean(errorMessage) && (\r\n                <FormHelperText>{errorMessage}</FormHelperText>\r\n            )}\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default React.memo(withFormsy(CheckboxFormsy));\r\n"]},"metadata":{},"sourceType":"module"}